=head1 Release instructions for ExtUtils::CBuilder

=head2 Prerequisites

ExtUtils::CBuilder is now managed using Dist::Zilla.  You should install
Dist::Zilla from CPAN and then run C<dzil authordeps> to get a list of
plugins to install.  If you have F<cpanm> you can install any that you
need with:

  $ dzil authordeps | cpanm

=head2 Updating from bleadperl

Any changes in the perl blead repository need to be synchronized to
the EU::CB repostory.  You can generate a diff using the F<bleadcheck.pl>
tool.  Assuming your bleadperl repository is F<~/git/perl>, run this command
from the top level of the EU::CB repo:

  $ perl devtools/bleadcheck.pl ~/git/perl

=head2 Testing and committing.

You can run tests with C<dzil test> and release tests with C<dzil xtest>.
If all tests pass, check in the changes to the repository.  Be sure to
add any new files.

  $ dzil test
  $ dzil xtest
  $ git status
  $ git add .

Confirm that you are in sync:

  $ perl devtools/bleadcheck.pl ~/git/perl

Take note of the commit ID and use it in the commit message

  $ git commit -m "Updating from bleadperl commit 435aa301"

If tests fail, you *must* submit changes upstream in the bleadperl repository
and then resynchronize from blead.

=head2 Packaging and shipping

Update the Changes file with a summary of changes from blead and add a
timestamp for release, then commit it.

  $ $EDITOR Changes
  $ git add Changes
  $ git commit -m "Updated Changes"

Check what the final distribution will look like:

  $ dzil build

If everything looks good, ship it!

  $ dzil release

=head2 After shipping

If the release uploaded, tag the release in git (replace XX.YY with the
correct version, of course).

  $ git tag -m "release XX.YY" release-XX.YY

=cut

